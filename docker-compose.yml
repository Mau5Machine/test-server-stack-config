version: "3.7"

services:
  traefik:
    image: traefik:v2.0
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: ingress
    command:
      - --api.insecure=true
      - --log.level=DEBUG
      - --providers.file.filename=/config/dynamic.yml
      - --providers.docker=true
      - --providers.docker.swarmmode=true
      - --providers.docker.watch
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/dynamic.yml:/config/dynamic.yml:ro
    networks:
      - traefik
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  wordpress:
    image: wordpress
    restart: always
    ports:
      - 8080:80
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD_FILE: /run/secrets/wp_db_pass
      WORDPRESS_DB_NAME: wordpress
    networks:
      - traefik
      - backend
    deploy:
      labels:
      - "traefik.http.routers.wp-test.rule=Host(`arachosiadesigns.com`)"
      - "traefik.http.routers.wp-test.entrypoints=web"
      - "traefik.http.routers.wp-test.service=wp-test"
      - "traefik.http.services.wp-test.loadbalancer.server.port=80"
      - "traefik.docker.network=traefik"
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
    volumes:
      - wp-root:/var/www/html

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: root
      MYSQL_PASSWORD_FILE: /run/secrets/wp_db_pass
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    networks:
      - backend
    deploy:
        replicas: 1
        restart_policy:
          condition: on-failure
        update_config:
          parallelism: 1
          delay: 10s
    volumes:
      - db:/var/lib/mysql

networks:
  traefik:
    driver: overlay
    name: traefik
  backend:
    driver: overlay
    name: backend

volumes:
  db: {}
  wp-root: {}